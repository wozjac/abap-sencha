<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
    <LANGU>E</LANGU>
    <DESCRIPT>ABAP Expect</DESCRIPT>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <WITH_UNIT_TESTS>X</WITH_UNIT_TESTS>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>ACTUAL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Actual value passed to ASSERT... methods</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>AND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Used for chained checks</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>BE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>BEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>BETWEEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Number in range check, a wrapper for ASSERT_NUMBER_BETWEEN</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>BOUND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Bound/not bound object check</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>CONTAINED_IN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Is the value contained in</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>COVERS_PATTERN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Pattern matching check, calls COVER_PATTERN</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>COVER_PATTERN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Pattern matching check, a wrapper for ASSERT_CHAR_CP</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>DOES</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EQUAL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Equality check, a wrapper for ASSERT_EQUALS</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EQUALS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Equality check, calls EQUAL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EQUALS_TO</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Equality check, calls EQUAL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EQUAL_TO</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Equality check, calls EQUAL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EXPECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>An entry method for checks using &quot;expect&quot; style</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EXPECT_RETURN_CODE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>An entry method for checking a return code</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>EXPECT_SUBRC</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>An entry method for checking a return code</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>FAIL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Failure, a wrapper for FAIL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>FALSE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>False value check, a wrapper for ASSERT_FALSE</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>GIVEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Can be used to add a description for the &apos;given&apos; section</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>INITIAL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Initial value check, a wrapper for ASSERT_INITIAL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>IS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>LEVEL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Severity level passed to ASSERT... methods</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>MATCHES_PATTERN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Pattern matching check, calls COVER_PATTERN</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>MATCHES_REGEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Regex matching check, calls MATCH_REGEX</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>MATCH_PATTERN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Pattern matching check, calls COVER_PATTERN</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>MATCH_REGEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Regex matching check, a wrapper for ASSERT_TEXT_MATCHES</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>MESSAGE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Message passed to ASSERT... methods</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>NEGATION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Negation indicator</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>NOT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Negates ONLY the next check</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>NOT_BOUND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Bound/not bound check</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>NOT_COVER_PATTERN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Pattern matching check, a wrapper for ASSERT_CHAR_NP</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>NOT_INITIAL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Non-initial value check, a wrapper for ASSERT_NOT_INITIAL</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>QUIT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Quit behavior passed to ASSERT... methods</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>SATISFIES</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check for a custom condition, calls SATISFY</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>SATISFY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Check for a custom condition, a wrapper for ASSERT_THAT</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>SHOULD</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>SKIP</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Skip the test execution</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>SUBRC_COPY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>The copy of SUBRC</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>THE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>A wrapper for &quot;value&quot; method</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>THEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Can be used to add a description for the &apos;then&apos; section</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>TO</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Language chain</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>TRUE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>True value check, a wrapper for ASSERT_TRUE</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>V</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>A wrapper for &quot;value&quot; method</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>VALUE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>An entry method for checks using &quot;should&quot; style</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZCL_ABAP_SENCHA</CLSNAME>
     <CMPNAME>WHEN</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Can be used to add a description for the &apos;when&apos; section</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
